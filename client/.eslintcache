[{"C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\index.js":"1","C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\reportWebVitals.js":"2","C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Components\\App.js":"3","C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Components\\Routes.js":"4","C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Components\\Header.js":"5","C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Context\\Api.js":"6","C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Components\\LogInPage.js":"7","C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Components\\Body.js":"8","C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Components\\SignUpPage.js":"9","C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Components\\Admin.js":"10","C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Components\\Recipe.js":"11","C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Components\\Categories.js":"12","C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Context\\CategoryContext.js":"13","C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Context\\RecipesContext.js":"14","C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Components\\Recipes.js":"15","C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Context\\UserStatus.js":"16"},{"size":324,"mtime":1608572213295,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":849,"mtime":1608681484286,"results":"20","hashOfConfig":"18"},{"size":1249,"mtime":1608674387218,"results":"21","hashOfConfig":"18"},{"size":3539,"mtime":1608775166356,"results":"22","hashOfConfig":"18"},{"size":208,"mtime":1608772134574,"results":"23","hashOfConfig":"18"},{"size":4026,"mtime":1608775858107,"results":"24","hashOfConfig":"18"},{"size":479,"mtime":1608492558686,"results":"25","hashOfConfig":"18"},{"size":5401,"mtime":1608775396972,"results":"26","hashOfConfig":"18"},{"size":13079,"mtime":1608779394152,"results":"27","hashOfConfig":"18"},{"size":8945,"mtime":1608776854368,"results":"28","hashOfConfig":"18"},{"size":3536,"mtime":1608538805803,"results":"29","hashOfConfig":"18"},{"size":1154,"mtime":1608539120343,"results":"30","hashOfConfig":"18"},{"size":940,"mtime":1608538265907,"results":"31","hashOfConfig":"18"},{"size":2311,"mtime":1608776799230,"results":"32","hashOfConfig":"18"},{"size":1339,"mtime":1608283418091,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"az49m3",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"36"},"C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\index.js",[],["75","76"],"C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\reportWebVitals.js",[],"C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Components\\App.js",[],"C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Components\\Routes.js",["77"],"import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\n//Importing components\r\nimport LogInPage from './LogInPage';\r\nimport SignUpPage from './SignUpPage';\r\nimport Admin from './Admin';\r\nimport Recipe from './Recipe';\r\nimport Body from './Body';\r\n\r\nconst Routes = () => {\r\n    const domain = \"https://my135.brighton.domains/ci609/assignment\";\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/login\" exact component={LogInPage} /> {/** LogIn Form */}\r\n            <Route path=\"/signup\" exact component={SignUpPage} /> {/** SignUp Form */}\r\n            <Route path=\"/admin\" exact component={Admin} /> {/** Admin page with forms to create stuff */}\r\n            <Route path=\"/recipes/:id\" exact component={Recipe} /> {/** Recipes' pages by recipes' IDs */}\r\n            <Route path=\"/:category?\" exact component={Body} /> {/**Checks the current category to fetch the data from the DB */}\r\n            <Route path=\"/\" exact component={Body} /> {/** The exact prevents the home page from conflictign with other paths because all paths start with a / */}\r\n            <Route component={Body} /> {/**A default route when the entered link doesn't match any path */}\r\n\r\n        </Switch>\r\n    );\r\n}\r\nexport default Routes;","C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Components\\Header.js",["78"],"import { React, useContext } from 'react';\r\nimport '../assets/main.css';\r\n\r\nimport api from '../Context/Api'; // Importing The api component where the base url is...\r\nimport Cookies from 'js-cookie'; // Importing js-cookie to set and remove cookies to authenticate users...\r\nimport { Link } from 'react-router-dom'; // Importing react-router-dom elements...\r\n\r\n// LogOut and UserStatus function.\r\nimport { UserContext } from '../Context/UserStatus';\r\nimport { RecipesContext } from '../Context/RecipesContext';\r\n\r\n\r\n\r\nconst Header = () => {\r\n    const { loggedin, setLoggedin } = useContext(UserContext);\r\n    const [displayedRecipes, setDisplayedRecipes] = useContext(RecipesContext);\r\n    const { admin, setAdmin } = useContext(UserContext);\r\n\r\n    const logOut = () => {\r\n        api().get('sanctum/csrf-cookie').then(() => { // Authenticate the request via Sanctum cookies for csrf...\r\n            api().post('logout')// Post the logout form with email and password...\r\n                .then(response => { // If response has error display it, if not set a coockie with the user information and redirect them to homepage.\r\n                    if (response.data.error) {\r\n                        console.log(response.data.error);\r\n                    } else {\r\n                        if (typeof window !== 'undefined') {\r\n                            // remove the logged in user's cookie and redirect to login page\r\n                            Cookies.remove('is_user_logged_in', { expires: 365, sameSite: 'lax' });\r\n                            setLoggedin(false);\r\n                            setAdmin(false);\r\n                        }\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    const getAllRecipes = () => {\r\n        api().get(`api/recipes`)\r\n            .then((res) => {\r\n                setDisplayedRecipes(res.data);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <header className=\"bg-blue-500 p-4\" >\r\n            <nav className=\"flex justify-between items-center\">\r\n                <div className=\"flex items-center\">\r\n                    <Link to=\"/\" onClick={() => (getAllRecipes)} >\r\n                        <img src={process.env.PUBLIC_URL + '/img/logo.png'} alt=\"Syrian+ Recipe logo\" className=\"inline-block mr-2 cursor-pointer max-h-9\" />\r\n                    </Link>\r\n                    <Link to=\"/\" onClick={() => (getAllRecipes)} className=\"inline-block p-2 text-blue-100 hover:text-white cursor-pointer\" >Home</Link>\r\n                </div>\r\n\r\n                {loggedin ? admin ? <div>\r\n                    <Link to=\"/admin\" className=\"inline-block p-2 text-blue-100 hover:text-white cursor-pointer\" >Admin</Link>\r\n                    <Link to=\"/\" className=\"inline-block p-2 text-blue-100 hover:text-white cursor-pointer\" onClick={logOut} >Log Out</Link>\r\n                </div>\r\n                    : <Link to=\"/\" className=\"inline-block p-2 text-blue-100 hover:text-white cursor-pointer\" onClick={logOut} >Log Out</Link>\r\n                    : <div>\r\n                        <Link to=\"/login\" className=\"inline-block p-2 text-blue-100 hover:text-white cursor-pointer\" >Log In</Link>\r\n                        <Link to=\"/signup\" className=\"inline-block py-2 px-4 mx-2 text-blue-50 bg-green-500 hover:text-white hover:bg-green-400 rounded transition ease-in duration-200 cursor-pointer\" >Sign Up</Link>\r\n                    </div>}\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Context\\Api.js",[],"C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Components\\LogInPage.js",[],"C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Components\\Body.js",[],"C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Components\\SignUpPage.js",[],"C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Components\\Admin.js",["79","80","81","82","83","84","85","86","87","88","89"],"C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Components\\Recipe.js",["90","91","92","93","94"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n// Importing api to make CRUD calls\r\nimport api from '../Context/Api';\r\n\r\n\r\nconst Recipe = () => {\r\n    const param = useParams(); {/** Get the parameters of the link, in our case it is the recipe id */ }\r\n    const imageFolderPath = \"https://my135.brighton.domains/storage/\";\r\n    useEffect(() => {\r\n        api().get(`api/recipes/${param.id}`)\r\n            .then(response => {\r\n                // Setting values to states' variables...\r\n                setName(response.data[0].rName);\r\n                setImage(response.data[0].image);\r\n                setDescription(response.data[0].description);\r\n                setMake(response.data[0].howToMake);\r\n                setTime(response.data[0].timeToPrep);\r\n                setIngredients(response.data[0].ingredients);\r\n                setCategoryName(response.data[0].categoryName);\r\n\r\n            })\r\n            .catch((error) => {\r\n                // Error\r\n                if (error.response) {\r\n                    setErrors(error.response);\r\n                } else if (error.request) {\r\n                    setErrors(error.request);\r\n                } else {\r\n                    // Something happened in setting up the request that triggered an Error\r\n                    setErrors('Un-Known Error');\r\n                }\r\n            })\r\n    }, []);\r\n\r\n    //Recipe Information\r\n    const [name, setName] = useState('');\r\n    const [image, setImage] = useState([0]);\r\n    const [time, setTime] = useState('');\r\n    const [categoryName, setCategoryName] = useState('');\r\n    const [ingredients, setIngredients] = useState(\"\"); {/**  Array of ingredients */ }\r\n    const splitIngredientsArr = ingredients.split(',');\r\n    const [description, setDescription] = useState('');\r\n    const [make, setMake] = useState('');\r\n    {/**  Errors */ }\r\n    const [errors, setErrors] = useState([\"\"]);\r\n\r\n\r\n    // Ratings List...\r\n    const [ratings, setRatings] = useState([]);\r\n    const showRatings = () => {\r\n        setRatings([\"hey\"]);\r\n        api().get(`api/rating/${param.id}`)\r\n            .then(res => {\r\n                setRatings(res.data);\r\n            })\r\n            .catch(error => {\r\n                if (error.response) {\r\n                    setErrors(error.response);\r\n                } else if (error.request) {\r\n                    setErrors(error.request);\r\n                } else {\r\n                    // Something happened in setting up the request that triggered an Error\r\n                    setErrors('Un-Known Error');\r\n                }\r\n            });\r\n    }\r\n\r\n    // Rating Form...\r\n    const [ratingComment, setRatingComment] = useState('');\r\n    const [stars, setStars] = useState(0);\r\n    const submitRating = () => {\r\n        api().get('sanctum/csrf-cookie').then(() => {\r\n            api().post('api/rating', {\r\n                recipe_id: param.id,\r\n                stars: stars,\r\n                rating_input: ratingComment\r\n            })\r\n                .then(res => {\r\n                    setRatings([...ratings, { stars: stars, rating_input: ratingComment }]);\r\n                })\r\n                .catch(error => {\r\n                    if (error.response) {\r\n                        setErrors(error.response);\r\n                    } else if (error.request) {\r\n                        setErrors(error.request);\r\n                    } else {\r\n                        // Something happened in setting up the request that triggered an Error\r\n                        setErrors('Un-Known Error');\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"bg-indigo-50\">\r\n            <div className=\"container mx-auto bg-gray-50 min-h-screen border shadow-md\">\r\n                <div className=\"grid md:grid-cols-3 gap-4 w-11/12 mx-auto flex\">\r\n                    <div className=\"con-span-3 md:col-span-1 rounded overflow-hidden h-full\"\r\n                        style={{ maxHeight: '400px' }}>\r\n                        <img\r\n                            src={`${imageFolderPath + image}`}\r\n                            alt={name}\r\n                            className=\"w-max h-48 md:h-full object-scale-down\" />\r\n                    </div>\r\n                    <div className=\"col-span-3 md:col-span-2 md:order-first py-8\">\r\n                        <p className=\"\"><span className=\"font-medium underline mr-4 \">Recipe Name:</span> {name}</p>\r\n                        <p className=\"\"><span className=\"font-medium underline mr-4 \">Recipe Category:</span> {categoryName}</p>\r\n                        <p className=\"\"><span className=\"font-medium underline  mr-4 whitespace-pre-wrap\">Description:</span></p>\r\n                        <div>{description}</div>\r\n                        <p className=\"\"><span className=\"font-medium underline mr-4 \">Time to make:</span>{time}</p>\r\n                        <ol className=\"list-decimal\"><span className=\"font-medium underline mr-4 \">Ingredients needed:</span>\r\n                            {splitIngredientsArr.map(ingredient => (\r\n                                <li className=\"ml-4\">{ingredient}</li>\r\n                            ))}</ol>\r\n                        <p className=\"\"><span className=\"font-medium underline  mr-4 whitespace-pre-wrap\">How to make it:</span></p>\r\n                        <div>{make}</div>\r\n                    </div>\r\n                    <div className=\"border col-span-3 mt-10\" ></div>\r\n\r\n\r\n                    {/**Rating Form */}\r\n                    <div className=\"col-span-3\">\r\n                        <div className=\"w-11/12 mx-auto mt-4\">\r\n                            <label htmlFor=\"rating\" className=\"mb-2 sm:text-sm tracking-wide text-gray-700 block\">Rating:</label>\r\n                            <div className=\"my-2 grid grid-rows-4 xl:grid-rows-3 grid-cols-1 xl:grid-cols-3 gap-4 h-64 xl:h-48\">\r\n                                <select className=\"col-span-1 xl:row-start-1 xl:col-start-3 py-2 rounded border border-gray-400 focus:outline-none focus:border-blue-500\"\r\n                                    onChange={(e) => (setStars(e.target.value))}\r\n                                    required\r\n                                    defaultValue=\"null\">\r\n                                    <option value=\"null\" disabled>How Many Stars</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"4\">4</option>\r\n                                    <option value=\"5\">5</option>\r\n                                </select>\r\n                                <textarea\r\n                                    id=\"rating\"\r\n                                    name=\"rating\"\r\n                                    className=\"col-span-1 row-span-2 xl:col-span-2 xl:row-span-3 max-h-full text-sm sm:text-base placeholder-gray-500 px-4 rounded-lg border border-gray-400 py-2 focus:outline-none focus:border-blue-500\"\r\n                                    placeholder=\"Enter rating...\"\r\n                                    maxLength=\"600\"\r\n                                    onChange={(e) => (\r\n                                        setRatingComment(e.target.value)\r\n                                    )}\r\n                                    required></textarea>\r\n                                <button type=\"Submit\" onClick={submitRating}\r\n                                    className=\"col-span-1 xl:row-start-3 xl:col-start-3 py-2 bg-blue-500 text-blue-50 hover:text-white hover:bg-blue-400 rounded transition ease-in duration-200 cursor-pointer focus:outline-none focus:ring focus:ring-blue-500 \">\r\n                                    Submit Rating...\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"text-red-600 my-2 mx-auto\" ></div>\r\n                        </div>\r\n                        <div>{errors}</div>\r\n                        <div className=\"border col-span-3 mt-10\" ></div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-span-3 mb-10\">\r\n                        <a onClick={() => (showRatings())} className=\"ml-4 text-blue-500 hover:text-blue-400 cursor-pointer my-6\">Show all ratings</a>\r\n                        {ratings.map(rating => (\r\n                            <div>\r\n                                <p className=\"m-2\"><span>Stars:</span> {rating.stars}</p>\r\n                                <p className=\"m-2\"><span>Comment:</span> {rating.rating_input}</p>\r\n                                <div className=\"border col-span-3 my-6\" ></div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default Recipe;","C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Components\\Categories.js",["95","96"],"import { React, useState, useContext } from 'react';\r\n\r\n//Importing React Dom...\r\nimport { Link } from 'react-router-dom';\r\nimport api from '../Context/Api';\r\n\r\n// Importing the CategoryContext...\r\nimport { CategoryContext } from '../Context/CategoryContext';\r\nimport { UserContext } from '../Context/UserStatus';\r\nimport { RecipesContext } from '../Context/RecipesContext';\r\n\r\n\r\nconst Categories = () => {\r\n    const [categories, setCategoryList] = useContext(CategoryContext);\r\n    const [displayedRecipes, setDisplayedRecipes] = useContext(RecipesContext);\r\n    const { admin } = useContext(UserContext);\r\n    const [openedTab, setOpenedTab] = useState(0);\r\n\r\n    const deleteCategory = (id) => {\r\n        api().get('sanctum/csrf-cookie').then(() => { // Authenticate the request via Sanctum cookies for csrf...\r\n            api().delete(`api/category/${id}`, { id })\r\n                .then(() => {\r\n                    setCategoryList(categories.filter(category => (category.id !== id)));\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n        });\r\n    }\r\n\r\n    const clickHandler = (id) => {\r\n        if (id !== null) { // Category/id gets all the recipes for with a category id equal to the id provided\r\n            api().get(`api/category/${id}`)\r\n                .then((res) => {\r\n                    setDisplayedRecipes(res.data);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n            setOpenedTab(id);\r\n        } else { //if no id provided, All is select so call the /recipes route\r\n            api().get(`api/recipes`)\r\n                .then((res) => {\r\n                    setDisplayedRecipes(res.data);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n            setOpenedTab(0);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"h-auto my-14 justify-center md:justify-start flex flex-wrap content-center\">\r\n            <ul className=\"list-none md:ml-8\">\r\n                <li key=\"0\" className=\"inline-block mb-5\">\r\n                    <Link to={`/category/all`} className={\r\n                        \"py-2 px-4 mx-2 text-blue-50 hover:text-white hover:bg-blue-400 rounded transition ease-in duration-200 cursor-pointer focus:outline-none focus:ring focus:ring-blue-500 \"\r\n                        + (openedTab === 0 ? \"bg-blue-500\" : \"text-blue-500\")}\r\n                        onClick={() => (clickHandler(null))} >All</Link></li>\r\n                {categories.length > 0 ? categories.map(category => (\r\n                    <li key={`${category.id}`} className=\"inline-block mb-5\">\r\n                        <Link to={`/category/${category.id}`}\r\n                            className={\r\n                                \"py-2 px-4 mx-2 hover:text-white hover:bg-blue-400 rounded transition ease-in duration-200 cursor-pointer focus:outline-none focus:ring focus:ring-blue-500 \"\r\n                                + (openedTab === category.id ? \"bg-blue-500 text-blue-50\" : \"text-blue-500\")}\r\n                            onClick={() => (clickHandler(category.id))} >{category.categoryName}</Link>\r\n                        { admin ? <a onClick={() => (deleteCategory(category.id))} className=\" bg-red-400 text-red-50 px-1 py-2 rounded hover:bg-red-600 cursor-pointer text-sm\">X</a> : \"\"}\r\n                    </li>\r\n                )) : \"\"}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Categories;","C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Context\\CategoryContext.js",["97","98","99"],"/**\r\n * Getting all the gategories from Syrian+ Recipes API and provide them to the whole app...\r\n */\r\nimport React, { useState, createContext, useEffect } from 'react';\r\nimport api from './Api'; // Importing api to use axios for CRUDs...\r\n\r\nexport const CategoryContext = createContext(); // Creating the context of categories... \r\n\r\nexport const CategoryProvider = (props) => {\r\n    useEffect(() => {\r\n        {/** useEffect will load once when the application is first loaded */ }\r\n        api().get('api/category')\r\n            .then(response => {\r\n                setCategoryList(response.data);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n    {/** useEffect First so the GET request is made before changing the state... */ }\r\n\r\n    const [categories, setCategoryList] = useState([\"\"]); {/** Initialise a state of array of categories... */ }\r\n    return (\r\n        <CategoryContext.Provider value={[categories, setCategoryList]}>\r\n            {props.children}  {/** Providing context for all the children that uses the provider... */}\r\n        </CategoryContext.Provider>\r\n    );\r\n}","C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Context\\RecipesContext.js",["100"],"/**\r\n * Provide Recipes context to the components that import the provider and use it.\r\n */\r\nimport React, { useState, createContext, useEffect } from 'react';\r\nimport api from './Api'; // Importing api to use axios for CRUDs...\r\n\r\nexport const RecipesContext = createContext(); // Context of the recipes list.\r\n\r\nexport const RecipesProvider = (props) => {\r\n    useEffect(() => {\r\n        api().get('api/recipes')\r\n            .then(response => {\r\n                setDisplayedRecipes(response.data);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n    {/** useEffect First so the GET request is made before changing the state... */ }\r\n    const [displayedRecipes, setDisplayedRecipes] = useState([\"\"]);\r\n    return (\r\n        <RecipesContext.Provider value={[displayedRecipes, setDisplayedRecipes]}>\r\n            {props.children}\r\n        </RecipesContext.Provider>\r\n    );\r\n}","C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Components\\Recipes.js",["101"],"/**\r\n * Display the recipes from the api.\r\n */\r\nimport { React, useContext } from 'react';\r\n\r\n// Import Link...\r\nimport { Link } from 'react-router-dom';\r\nimport api from '../Context/Api';\r\n\r\n// Importing ContextProvider\r\nimport { RecipesContext } from '../Context/RecipesContext';\r\nimport { UserContext } from '../Context/UserStatus';\r\n\r\nconst Recipes = () => {\r\n    const [displayedRecipes, setDisplayedRecipes] = useContext(RecipesContext);\r\n    const { admin } = useContext(UserContext);\r\n    const imageFolderPath = \"https://my135.brighton.domains/storage/\";\r\n\r\n    const deleteRecipe = (id) => {\r\n        api().get('sanctum/csrf-cookie').then(() => { // Authenticate the request via Sanctum cookies for csrf...\r\n            api().delete(`api/recipes/${id}`, { id })\r\n                .then(() => {\r\n                    setDisplayedRecipes(displayedRecipes.filter(recipe => (recipe.id !== id)));\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n        });\r\n    }\r\n    return (\r\n        <div className=\"grid md:grid-cols-3 gap-5 w-11/12 mx-auto\">\r\n            {displayedRecipes.map(recipe => (\r\n                <div id={`${recipe.id}`} key={`${recipe.id}`} className=\"bg-white rounded-lg overflow-hidden shadow-md  h-full\" style={{ maxHeight: '600px' }}>\r\n                    <div> <img src={`${imageFolderPath + recipe.image}`} alt={`${recipe.rName}`} className=\"w-full h-48 sm:h-64 object-cover\" />\r\n                    </div>\r\n                    <div className=\"m-4\">\r\n                        <h2 className=\"text-xl\">{recipe.rName}</h2>\r\n                        <p className=\"block mb-4\">{recipe.description}</p>\r\n                        <Link to={`/recipes/${recipe.id}`}\r\n                            className=\"py-2 px-4 bg-blue-500 text-blue-50 hover:text-white hover:bg-blue-400 rounded transition ease-in duration-200 cursor-pointer focus:outline-none focus:ring focus:ring-blue-500\"\r\n                        >Learn...\r\n                        </Link>\r\n                        {admin ? <a onClick={() => (deleteRecipe(recipe.id))} className=\"ml-4 text-blue-500 hover:text-red-400 cursor-pointer\">Delete</a> : \"\"}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\nexport default Recipes;","C:\\Users\\moham\\Desktop\\Studying\\Uni\\Brighton_Uni_Year_3\\Advanced_Web_Application_Development\\Yabroudi_Mohamad_18821161_CI609_assignment\\client\\src\\Context\\UserStatus.js",["102","103","104"],"/**\r\n * Checks if the user is logged in or not...\r\n * the useEffect will run at first to check if the cookie exists or not. based of that it will know if the user is still logged in or not\r\n */\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport Cookies from 'js-cookie'; // Importing js-cookie to set and remove cookies to authenticate users...\r\nexport const UserContext = createContext(); // Creating the context of User... \r\n\r\nexport const UserProvider = (props) => {\r\n    useEffect(() => {\r\n        {/** useEffect will load once when the application is first loaded */ }\r\n        const user = Cookies.get('is_user_logged_in');\r\n        const admin = Cookies.get('is_user_admin');\r\n        if (user) {\r\n            if (admin) {\r\n                setAdmin(true);\r\n            }\r\n            setLoggedin(true);\r\n        } else {\r\n            setLoggedin(false);\r\n        }\r\n    }, []);\r\n    const [loggedin, setLoggedin] = useState(false); {/** Initialise a status of User... */ }\r\n    const [admin, setAdmin] = useState(false); {/** Initialise a status of User... */ }\r\n    return (\r\n        <UserContext.Provider value={{ loggedin, setLoggedin, admin, setAdmin }}>\r\n            {props.children}  {/** Providing context for all the children that uses the provider... */}\r\n        </UserContext.Provider>\r\n    );\r\n}",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":12,"column":11,"nodeType":"111","messageId":"112","endLine":12,"endColumn":17},{"ruleId":"109","severity":1,"message":"113","line":16,"column":12,"nodeType":"111","messageId":"112","endLine":16,"endColumn":28},{"ruleId":"114","severity":1,"message":"115","line":9,"column":5,"nodeType":"116","messageId":"117","endLine":9,"endColumn":21},{"ruleId":"114","severity":1,"message":"115","line":11,"column":5,"nodeType":"116","messageId":"117","endLine":11,"endColumn":24},{"ruleId":"114","severity":1,"message":"115","line":14,"column":5,"nodeType":"116","messageId":"117","endLine":14,"endColumn":22},{"ruleId":"114","severity":1,"message":"115","line":21,"column":57,"nodeType":"116","messageId":"117","endLine":21,"endColumn":88},{"ruleId":"114","severity":1,"message":"115","line":22,"column":55,"nodeType":"116","messageId":"117","endLine":22,"endColumn":83},{"ruleId":"114","severity":1,"message":"115","line":23,"column":52,"nodeType":"116","messageId":"117","endLine":23,"endColumn":80},{"ruleId":"114","severity":1,"message":"115","line":26,"column":5,"nodeType":"116","messageId":"117","endLine":26,"endColumn":22},{"ruleId":"118","severity":1,"message":"119","line":34,"column":13,"nodeType":"120","messageId":"121","endLine":34,"endColumn":34},{"ruleId":"114","severity":1,"message":"115","line":57,"column":36,"nodeType":"116","messageId":"117","endLine":57,"endColumn":129},{"ruleId":"118","severity":1,"message":"119","line":68,"column":13,"nodeType":"120","messageId":"121","endLine":68,"endColumn":34},{"ruleId":"122","severity":1,"message":"123","line":165,"column":41,"nodeType":"124","endLine":165,"endColumn":90},{"ruleId":"114","severity":1,"message":"115","line":8,"column":32,"nodeType":"116","messageId":"117","endLine":8,"endColumn":105},{"ruleId":"125","severity":1,"message":"126","line":34,"column":8,"nodeType":"127","endLine":34,"endColumn":10,"suggestions":"128"},{"ruleId":"114","severity":1,"message":"115","line":41,"column":57,"nodeType":"116","messageId":"117","endLine":41,"endColumn":88},{"ruleId":"114","severity":1,"message":"115","line":45,"column":5,"nodeType":"116","messageId":"117","endLine":45,"endColumn":22},{"ruleId":"122","severity":1,"message":"123","line":161,"column":25,"nodeType":"124","endLine":161,"endColumn":131},{"ruleId":"109","severity":1,"message":"113","line":15,"column":12,"nodeType":"111","messageId":"112","endLine":15,"endColumn":28},{"ruleId":"122","severity":1,"message":"123","line":68,"column":35,"nodeType":"124","endLine":68,"endColumn":178},{"ruleId":"114","severity":1,"message":"115","line":11,"column":9,"nodeType":"116","messageId":"117","endLine":11,"endColumn":80},{"ruleId":"114","severity":1,"message":"115","line":20,"column":5,"nodeType":"116","messageId":"117","endLine":20,"endColumn":86},{"ruleId":"114","severity":1,"message":"115","line":22,"column":59,"nodeType":"116","messageId":"117","endLine":22,"endColumn":113},{"ruleId":"114","severity":1,"message":"115","line":19,"column":5,"nodeType":"116","messageId":"117","endLine":19,"endColumn":86},{"ruleId":"122","severity":1,"message":"123","line":43,"column":34,"nodeType":"124","endLine":43,"endColumn":144},{"ruleId":"114","severity":1,"message":"115","line":11,"column":9,"nodeType":"116","messageId":"117","endLine":11,"endColumn":80},{"ruleId":"114","severity":1,"message":"115","line":23,"column":54,"nodeType":"116","messageId":"117","endLine":23,"endColumn":94},{"ruleId":"114","severity":1,"message":"115","line":24,"column":48,"nodeType":"116","messageId":"117","endLine":24,"endColumn":88},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'domain' is assigned a value but never used.","Identifier","unusedVar","'displayedRecipes' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'param.id'. Either include it or remove the dependency array.","ArrayExpression",["131"],"no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},"Update the dependencies array to be: [param.id]",{"range":"134","text":"135"},[1407,1409],"[param.id]"]